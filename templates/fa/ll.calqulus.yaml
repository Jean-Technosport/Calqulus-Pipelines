############
## SPACES ##
############

- space: VirtualLab
  alignWithSegment:
    segment: Hips

############
## EVENTS ##
############

- event: BOF
  steps:
    - import: [1]

- event: EOF
  steps:
    - import: [$length]

- parameter: PelvisCGPos_VLab@BOF
  steps:
    - import: PelvisCGPos@BOF

- parameter: PelvisCGPos_VLab_mean
  steps:
    - mean: PelvisCGPos

- event: COM_MIN
  steps:
    - min: Hips.z
      frames: true

- event: PlotStart_stand
  steps:
    # stand
    - negate: PelvisCGPos_vel
    - eventMask: [$prev, BOF, COM_MIN]
    - threshold: $prev.z
      value: 0.02
      direction: down
    - import: $prev@1
    - subtract: [$prev, 1]

# Left
- event: LFT_DistEndVel_max
  where:
    name: LL_L*
  steps:
    - max: LFT_DistEndVel.x
      frames: true

- event: LFT_DistEndVel_min
  where:
    name: LL_L*
  steps:
    - min: LFT_DistEndVel.x
      frames: true

- event: TouchDown
  where:
    name: LL_L*
  steps:
    - eventMask: [LFT_DistEndVel.z, LFT_DistEndVel_min, LFT_DistEndVel_max]
    - min:
      frames: true

- event: PlotStart
  where:
    name: LL_L*
  steps:
    - import: TouchDown
    # - if: PelvisCGPos_VLab@BOF.x < PelvisCGPos_VLab_mean.x
    #   then: PlotStart_stand
    #   else: TouchDown

- event: TakeOff
  where:
    name: LL_L*
  steps:
    - eventMask: [LFT_DistEndVel.x, TouchDown, LFT_DistEndVel_max]
    - threshold: $prev
      value: 1
      direction: up
    - import: $prev@-1

- event: Landing_L
  # where:
  #   name: LL_L*
  steps:
    - eventMask: [LFT_DistEndPos.z, TakeOff, EOF]
    - max:
      frames: true

# Right
- event: RFT_DistEndVel_max
  where:
    name: LL_R*
  steps:
    - max: RFT_DistEndVel.x
      frames: true

- event: RFT_DistEndVel_min
  where:
    name: LL_R*
  steps:
    - min: RFT_DistEndVel.x
      frames: true

- event: TouchDown
  where:
    name: LL_R*
  steps:
    - eventMask: [RFT_DistEndVel.z, RFT_DistEndVel_min, RFT_DistEndVel_max]
    - min:
      frames: true

- event: PlotStart
  where:
    name: LL_R*
  steps:
    - import: TouchDown
    # - if: PelvisCGPos_VLab@BOF.x < PelvisCGPos_VLab_mean.x
    #   then: PlotStart_stand
    #   else: TouchDown

- event: TakeOff
  where:
    name: LL_R*
  steps:
    - negate: RFT_DistEndVel
    - eventMask: [$prev.x, TouchDown, RFT_DistEndVel_min]
    - threshold: $prev
      value: 1
      direction: up
    - import: $prev@-1

- event: Landing_R
  # where:
  #   name: LL_R*
  steps:
    - eventMask: [RFT_DistEndAcc.z, TakeOff, EOF]
    - max:
      frames: true

# Unified event names for web
- event: LeftPlotStart
  steps:
    - import: PlotStart

- event: LeftPlotEnd
  steps:
    - import: TakeOff

- event: RightPlotStart
  steps:
    - import: PlotStart

- event: RightPlotEnd
  steps:
    - import: TakeOff

############
## SERIES ##
############

- template: /templates/timeseries.calqulus.yaml

#############
## Metrics ##
#############

# COM @TakeOff, max, min
# We use Pelvis COM for now
- parameter: COM_Z_TO_LL_L
  where:
    name: LL_L*
  steps:
    - import: Hips@TakeOff
    - convert:
      from: mm
      to: m

- parameter: CenterOfMass_MIN_LL_L
  where:
    name: LL_L*
  steps:
    - min: Hips.z
    - convert:
      from: mm
      to: m

- parameter: CenterOfMass@PlotStart_LL_L
  where:
    name: LL_L*
  steps:
    - import: Hips@PlotStart
    - convert:
      from: mm
      to: m

- parameter: COM_displacement_MEAN_min_LL_L 
  where:
    name: LL_L*
  steps:
    - subtract: [CenterOfMass\@PlotStart_LL_L, CenterOfMass_MIN_LL_L]

# COM distance to knee and ankle #####
# Left ------
# @TouchDown
- parameter: Left_Ankle_COM_distance@TouchDown_LL_L
  where:
    name: LL_L*
  steps:
    - import: Left_Ankle_COM_distance@TouchDown

- parameter: Left_Knee_COM_distance@TouchDown_LL_L
  where:
    name: LL_L*
  steps:
    - import: Left_Knee_COM_distance@TouchDown

# @TakeOff
- parameter: Left_Ankle_COM_distance@TakeOff_LL_L
  where:
    name: LL_L*
  steps:
    - import: Left_Ankle_COM_distance@TakeOff

- parameter: Left_Knee_COM_distance@TakeOff_LL_L
  where:
    name: LL_L*
  steps:
    - import: Left_Knee_COM_distance@TakeOff

# @Pelvis_lowest
- parameter: Left_Ankle_COM_distance@Pelvis_lowest_LL_L
  where:
    name: LL_L*
  steps:
    - import: Left_Ankle_COM_distance@Pelvis_lowest

- parameter: Left_Knee_COM_distance@Pelvis_lowest_LL_L
  where:
    name: LL_L*
  steps:
    - import: Left_Knee_COM_distance@Pelvis_lowest

# Other metrics @TouchDown
- parameter: Left Knee Angles@TouchDown_LL_L
  where:
    name: LL_L*
  steps:
    - import: Left Knee Angles@TouchDown

- parameter: Left Hip Angles@TouchDown_LL_L
  where:
    name: LL_L*
  steps:
    - import: Left Hip Angles@TouchDown

- parameter: Left Thorax Angles@TouchDown_LL_L
  where:
    name: LL_L*
  steps:
    - import: Left Thorax Angles@TouchDown

# @COM_MIN
- parameter: Left Ankle Angles@COM_MIN_LL_L
  where:
    name: LL_L*
  steps:
    - import: Left Ankle Angles@COM_MIN

- parameter: Left Knee Angles@COM_MIN_LL_L
  where:
    name: LL_L*
  steps:
    - import: Left Knee Angles@COM_MIN

- parameter: Left Hip Angles@COM_MIN_LL_L
  where:
    name: LL_L*
  steps:
    - import: Left Hip Angles@COM_MIN

# @Max
- parameter: Left Hip Angles_max_LL_L
  where:
    name: LL_L*
  steps:
    - max: Left Hip Angles

- parameter: Left Knee Angles_max_LL_L
  where:
    name: LL_L*
  steps:
    - max: Left Knee Angles

- parameter: Left Ankle Angles_max_LL_L
  where:
    name: LL_L*
  steps:
    - max: Left Ankle Angles

- parameter: Left Foot Progression_max_LL_L
  where:
    name: LL_L*
  steps:
    - max: Left Foot Progression


# Right ------
# @TouchDown
- parameter: Right_Ankle_COM_distance@TouchDown_LL_R
  where:
    name: LL_R*
  steps:
    - import: Right_Ankle_COM_distance@TouchDown

- parameter: Right_Knee_COM_distance@TouchDown_LL_R
  where:
    name: LL_R*
  steps:
    - import: Right_Knee_COM_distance@TouchDown

# @TakeOff
- parameter: Right_Ankle_COM_distance@TakeOff_LL_R
  where:
    name: LL_R*
  steps:
    - import: Right_Ankle_COM_distance@TakeOff

- parameter: Right_Knee_COM_distance@TakeOff_LL_R
  where:
    name: LL_R*
  steps:
    - import: Right_Knee_COM_distance@TakeOff

# @Pelvis_lowest
- parameter: Right_Ankle_COM_distance@Pelvis_lowest_LL_R
  where:
    name: LL_R*
  steps:
    - import: Right_Ankle_COM_distance@Pelvis_lowest

- parameter: Right_Knee_COM_distance@Pelvis_lowest_LL_R
  where:
    name: LL_R*
  steps:
    - import: Right_Knee_COM_distance@Pelvis_lowest

# Other metrics @TouchDown
- parameter: Right Knee Angles@TouchDown_LL_R
  where:
    name: LL_R*
  steps:
    - import: Right Knee Angles@TouchDown

- parameter: Right Hip Angles@TouchDown_LL_R
  where:
    name: LL_R*
  steps:
    - import: Right Hip Angles@TouchDown

- parameter: Right Thorax Angles@TouchDown_LL_R
  where:
    name: LL_R*
  steps:
    - import: Right Thorax Angles@TouchDown

# @COM_MIN
- parameter: Right Ankle Angles@COM_MIN_LL_R
  where:
    name: LL_R*
  steps:
    - import: Right Ankle Angles@COM_MIN

- parameter: Right Knee Angles@COM_MIN_LL_R
  where:
    name: LL_R*
  steps:
    - import: Right Knee Angles@COM_MIN

- parameter: Right Hip Angles@COM_MIN_LL_R
  where:
    name: LL_R*
  steps:
    - import: Right Hip Angles@COM_MIN

# @Max
- parameter: Right Hip Angles_max_LL_R
  where:
    name: LL_R*
  steps:
    - max: Right Hip Angles

- parameter: Right Knee Angles_max_LL_R
  where:
    name: LL_R*
  steps:
    - max: Right Knee Angles

- parameter: Right Ankle Angles_max_LL_R
  where:
    name: LL_R*
  steps:
    - max: Right Ankle Angles

- parameter: Right Foot Progression_max_LL_R
  where:
    name: LL_R*
  steps:
    - max: Right Foot Progression

# Jump distance - calculated as distance traposed by proximal end of foot from TakeOff to Landing
# Left
- parameter: LFT_DistEndPos@TakeOff
  steps:
    - import: LFT_DistEndPos@TakeOff

- parameter: RFT_DistEndPos@Landing_R
  steps:
    - import: RFT_DistEndPos@Landing_R

- parameter: Left_jump_distance
  steps:
    - subtract: [LFT_DistEndPos@TakeOff, RFT_DistEndPos@Landing_R]
    - abs:

# Right
- parameter: RFT_DistEndPos@TakeOff
  steps:
    - import: RFT_DistEndPos@TakeOff

- parameter: LFT_DistEndPos@Landing_L
  steps:
    - import: LFT_DistEndPos@Landing_L

- parameter: Right_jump_distance
  steps:
    - subtract: [RFT_DistEndPos@TakeOff, LFT_DistEndPos@Landing_L]
    - abs:





